{"version":3,"sources":["robots.js","SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["robots","id","name","SearchBox","searchChange","className","type","onClick","App","onSearchChange","event","setState","searchfield","target","value","state","Card","dodatak","alt","src","toLowerCase","CardList","map","user","i","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0NAAaA,EAAS,CAClB,CACIC,GAAI,EACJC,KAAM,SAEV,CACID,GAAI,EACJC,KAAM,QAEV,CACID,GAAI,EACJC,KAAM,OAEV,CACID,GAAI,EACJC,KAAM,QAEV,CACID,GAAI,EACJC,KAAM,SAEV,CACID,GAAI,EACJC,KAAM,SAEV,CACID,GAAI,EACJC,KAAM,UAEV,CACID,GAAI,EACJC,KAAM,SAEV,CACID,GAAI,EACJC,KAAM,SAEV,CACID,GAAI,GACJC,KAAM,W,OC5BCC,EATG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OAAQ,qBAAKC,UAAU,MAAf,SACJ,uBAAOA,UAAU,mCACbC,KAAK,SACLC,QAASH,OCoFNI,G,wDAhFb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAf1C,EAAKC,MAAQ,CACXf,OAAQA,EACRY,YAAa,IAJH,E,0CAqBd,WAAU,IAAD,OAKDI,EAAO,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,KACRe,GADuB,EAAThB,GACJ,EAAKc,MAAMH,aAC3B,OAEE,sBAAKP,UAAU,qDAAf,UACE,qBAAKa,IAAI,SAASC,IAAG,+BAA0BF,EAAU,IAAMf,EAAKkB,cAA/C,mBACrB,8BACE,oBAAIf,UAAU,yBAAd,SAAwCH,UAO1CmB,EAAW,WAEf,OAEE,8BAGIrB,EAAOsB,KAAI,SAACC,EAAMC,GAChB,OAAQ,cAACR,EAAD,CAENf,GAAID,EAAOwB,GAAGvB,GACdC,KAAMF,EAAOwB,GAAGtB,MAFXsB,SAcjB,OACE,sBAAKnB,UAAU,KAAf,UAEE,oBAAIA,UAAU,KAAd,oBACA,uGAEA,cAAC,EAAD,CAAWD,aAAcqB,KAAKhB,iBAG9B,cAACY,EAAD,CAAUrB,OAAQA,W,GAzER0B,IAAMC,YCGTC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCCdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.7a93c6d7.chunk.js","sourcesContent":["export const robots = [\r\n    {\r\n        id: 1,\r\n        name: 'Sinke'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Tena'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Vec'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Anja'\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Hamer'\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Ivana'\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Renato'\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Doris'\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Karlo'\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'Lidija'\r\n    }\r\n];\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (<div className='pa2'>\r\n        <input className='pa3 ba b--green bg-lightest-blue'\r\n            type='search'\r\n            onClick={searchChange} />\r\n    </div>\r\n\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\n//import CardList from './CardList';\n//import Random from './Random';\nimport { robots } from './robots';\nimport SearchBox from './SearchBox';\n//import Button from './Button';\n//import Scroll from './Scroll';\nimport './App.css'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: robots,\n      searchfield: \"\"\n\n    }\n  }\n\n  //componentDidMount() {\n  //fetch('https://jsonplaceholder.typicode.com/users')\n  //.then(response => response.json())\n  //.then(users => this.setState({ robots: users }));\n\n  //}\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n\n\n  }\n  render() {\n\n\n\n\n    const Card = ({ name, id }) => {\n      const dodatak = this.state.searchfield\n      return (\n\n        <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\n          <img alt='robots' src={`https://robohash.org/${dodatak + '_' + name.toLowerCase()}?size=273x240`} />\n          <div>\n            <h2 className='f3 font-family: avenir'>{name}</h2>\n\n          </div>\n        </div>\n      );\n    }\n\n    const CardList = () => {\n\n      return (\n\n        <div>\n          {\n\n            robots.map((user, i) => {\n              return (<Card\n                key={i}\n                id={robots[i].id}\n                name={robots[i].name}\n              />)\n            })\n          }\n        </div>\n      );\n    }\n\n\n\n\n\n    return (\n      <div className='tc' >\n\n        <h1 className='f1'>Roboti</h1>\n        <p>Promjeni izgled robotima (upiši bilo što, pa klikni na box):</p>\n\n        <SearchBox searchChange={this.onSearchChange} />\n\n\n        <CardList robots={robots} />\n\n      </div >\n    );\n  }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}